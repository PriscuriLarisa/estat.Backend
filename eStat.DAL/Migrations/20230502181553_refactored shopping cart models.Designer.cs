// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eStat.DAL.Core;

#nullable disable

namespace eStat.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230502181553_refactored shopping cart models")]
    partial class refactoredshoppingcartmodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eStat.DAL.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderGUID");

                    b.HasIndex("UserGUID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eStat.DAL.Entities.OrderProduct", b =>
                {
                    b.Property<Guid>("OrderProductGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderProductGUID");

                    b.HasIndex("OrderGUID");

                    b.HasIndex("ProductGUID");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Characteristics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InUse")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductGUID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("eStat.DAL.Entities.ProductRequest", b =>
                {
                    b.Property<Guid>("ProductRequestGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductRequestGUID");

                    b.HasIndex("ProductGUID");

                    b.HasIndex("UserGUID");

                    b.ToTable("ProductRequests");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Purchase", b =>
                {
                    b.Property<Guid>("PurchaseGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PurchaseGUID");

                    b.HasIndex("UserGUID");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("eStat.DAL.Entities.PurchaseProduct", b =>
                {
                    b.Property<Guid>("PurchaseProductGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("PurchaseGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserProductGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PurchaseProductGUID");

                    b.HasIndex("PurchaseGUID");

                    b.HasIndex("UserProductGUID");

                    b.ToTable("PurchaseProducts");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Search", b =>
                {
                    b.Property<Guid>("SearchGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SearchGUID");

                    b.HasIndex("ProductGUID");

                    b.HasIndex("UserGUID");

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("eStat.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("UserGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Membership")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserGUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eStat.DAL.Entities.UserProduct", b =>
                {
                    b.Property<Guid>("UserProductGUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid?>("ProductGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserProductGUID");

                    b.HasIndex("ProductGUID");

                    b.HasIndex("UserGUID");

                    b.ToTable("UserProducts");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Order", b =>
                {
                    b.HasOne("eStat.DAL.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserGUID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eStat.DAL.Entities.OrderProduct", b =>
                {
                    b.HasOne("eStat.DAL.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderGUID");

                    b.HasOne("eStat.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eStat.DAL.Entities.ProductRequest", b =>
                {
                    b.HasOne("eStat.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eStat.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Purchase", b =>
                {
                    b.HasOne("eStat.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGUID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eStat.DAL.Entities.PurchaseProduct", b =>
                {
                    b.HasOne("eStat.DAL.Entities.Purchase", "Purchase")
                        .WithMany("Products")
                        .HasForeignKey("PurchaseGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eStat.DAL.Entities.UserProduct", "UserProduct")
                        .WithMany()
                        .HasForeignKey("UserProductGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");

                    b.Navigation("UserProduct");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Search", b =>
                {
                    b.HasOne("eStat.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eStat.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eStat.DAL.Entities.UserProduct", b =>
                {
                    b.HasOne("eStat.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductGUID");

                    b.HasOne("eStat.DAL.Entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserGUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eStat.DAL.Entities.Purchase", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eStat.DAL.Entities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
